### YamlMime:ManagedReference
items:
- uid: StartDevDrive.Program
  commentId: T:StartDevDrive.Program
  id: Program
  parent: StartDevDrive
  children:
  - StartDevDrive.Program.AppLocation
  - StartDevDrive.Program.CreateDevelopmentTxtFileAsync(System.String,System.String,System.String,System.String)
  - StartDevDrive.Program.DDriveCounter
  - StartDevDrive.Program.EDriveCounter
  - StartDevDrive.Program.Factory
  - StartDevDrive.Program.IconsRefreshed
  - StartDevDrive.Program.Logger
  - StartDevDrive.Program.MountDrive(System.Boolean)
  - StartDevDrive.Program.MountDriveTasksAsync
  - StartDevDrive.Program.RefreshIconCache
  - StartDevDrive.Program.RefreshIconCacheTasksAsync
  langs:
  - csharp
  - vb
  name: Program
  nameWithType: Program
  fullName: StartDevDrive.Program
  type: Class
  source:
    remote:
      path: StartDevDrive/Program.cs
      branch: master
      repo: https://github.com/SFC-Sarge/StartDevDrive.git
    id: Program
    path: Program.cs
    startLine: 46
  assemblies:
  - StartDevDrive
  namespace: StartDevDrive
  summary: Class Program
  remarks: "\n<p><strong>History:</strong></p>\n<table><tbody><tr><td><strong>Code Changed by:</strong><p>Danny C. McNaught</p><p><p><a href=\"mailto:danny.mcnaught@dannymcnaught.com\">danny.mcnaught@dannymcnaught.com</a></p></p></td></tr><tr><td><strong>Code changed on Visual Studio Host Machine:</strong><p>DESKTOP-ACLFE3O</p></td></tr><tr><td><strong>Code Change Date and Time:</strong><p>Sunday, June 20, 2021 10:42 PM</p><strong>Code Changes:</strong><p>Created XML Comment</p></td></tr></tbody></table>\n"
  example: []
  syntax:
    content: public class Program
    content.vb: Public Class Program
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: StartDevDrive.Program.Factory
  commentId: P:StartDevDrive.Program.Factory
  id: Factory
  parent: StartDevDrive.Program
  langs:
  - csharp
  - vb
  name: Factory
  nameWithType: Program.Factory
  fullName: StartDevDrive.Program.Factory
  type: Property
  source:
    remote:
      path: StartDevDrive/Program.cs
      branch: master
      repo: https://github.com/SFC-Sarge/StartDevDrive.git
    id: Factory
    path: Program.cs
    startLine: 64
  assemblies:
  - StartDevDrive
  namespace: StartDevDrive
  summary: Gets or sets the factory.
  remarks: "\n<p><strong>History:</strong></p>\n<table><tbody><tr><td><strong>Code Changed by:</strong><p>Danny C. McNaught</p><p><p><a href=\"mailto:danny.mcnaught@dannymcnaught.com\">danny.mcnaught@dannymcnaught.com</a></p></p></td></tr><tr><td><strong>Code changed on Visual Studio Host Machine:</strong><p>DESKTOP-ACLFE3O</p></td></tr><tr><td><strong>Code Change Date and Time:</strong><p>Sunday, June 20, 2021 10:42 PM</p><strong>Code Changes:</strong><p>Created XML Comment</p></td></tr></tbody></table>\n"
  example: []
  syntax:
    content: public static ILoggerFactory Factory { get; set; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILoggerFactory
      description: The factory.
    content.vb: Public Shared Property Factory As ILoggerFactory
  overload: StartDevDrive.Program.Factory*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: StartDevDrive.Program.Logger
  commentId: P:StartDevDrive.Program.Logger
  id: Logger
  parent: StartDevDrive.Program
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: Program.Logger
  fullName: StartDevDrive.Program.Logger
  type: Property
  source:
    remote:
      path: StartDevDrive/Program.cs
      branch: master
      repo: https://github.com/SFC-Sarge/StartDevDrive.git
    id: Logger
    path: Program.cs
    startLine: 81
  assemblies:
  - StartDevDrive
  namespace: StartDevDrive
  summary: Gets or sets the logger.
  remarks: "\n<p><strong>History:</strong></p>\n<table><tbody><tr><td><strong>Code Changed by:</strong><p>Danny C. McNaught</p><p><p><a href=\"mailto:danny.mcnaught@dannymcnaught.com\">danny.mcnaught@dannymcnaught.com</a></p></p></td></tr><tr><td><strong>Code changed on Visual Studio Host Machine:</strong><p>DESKTOP-ACLFE3O</p></td></tr><tr><td><strong>Code Change Date and Time:</strong><p>Sunday, June 20, 2021 10:42 PM</p><strong>Code Changes:</strong><p>Created XML Comment</p></td></tr></tbody></table>\n"
  example: []
  syntax:
    content: public static ILogger Logger { get; set; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger.
    content.vb: Public Shared Property Logger As ILogger
  overload: StartDevDrive.Program.Logger*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: StartDevDrive.Program.DDriveCounter
  commentId: P:StartDevDrive.Program.DDriveCounter
  id: DDriveCounter
  parent: StartDevDrive.Program
  langs:
  - csharp
  - vb
  name: DDriveCounter
  nameWithType: Program.DDriveCounter
  fullName: StartDevDrive.Program.DDriveCounter
  type: Property
  source:
    remote:
      path: StartDevDrive/Program.cs
      branch: master
      repo: https://github.com/SFC-Sarge/StartDevDrive.git
    id: DDriveCounter
    path: Program.cs
    startLine: 98
  assemblies:
  - StartDevDrive
  namespace: StartDevDrive
  summary: Gets or sets the d drive counter.
  remarks: "\n<p><strong>History:</strong></p>\n<table><tbody><tr><td><strong>Code Changed by:</strong><p>Danny C. McNaught</p><p><p><a href=\"mailto:danny.mcnaught@dannymcnaught.com\">danny.mcnaught@dannymcnaught.com</a></p></p></td></tr><tr><td><strong>Code changed on Visual Studio Host Machine:</strong><p>DESKTOP-ACLFE3O</p></td></tr><tr><td><strong>Code Change Date and Time:</strong><p>Sunday, June 20, 2021 10:42 PM</p><strong>Code Changes:</strong><p>Created XML Comment</p></td></tr></tbody></table>\n"
  example: []
  syntax:
    content: public static int DDriveCounter { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The d drive counter.
    content.vb: Public Shared Property DDriveCounter As Integer
  overload: StartDevDrive.Program.DDriveCounter*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: StartDevDrive.Program.IconsRefreshed
  commentId: P:StartDevDrive.Program.IconsRefreshed
  id: IconsRefreshed
  parent: StartDevDrive.Program
  langs:
  - csharp
  - vb
  name: IconsRefreshed
  nameWithType: Program.IconsRefreshed
  fullName: StartDevDrive.Program.IconsRefreshed
  type: Property
  source:
    remote:
      path: StartDevDrive/Program.cs
      branch: master
      repo: https://github.com/SFC-Sarge/StartDevDrive.git
    id: IconsRefreshed
    path: Program.cs
    startLine: 115
  assemblies:
  - StartDevDrive
  namespace: StartDevDrive
  summary: Gets or sets the icons refreshed.
  remarks: "\n<p><strong>History:</strong></p>\n<table><tbody><tr><td><strong>Code Changed by:</strong><p>Danny C. McNaught</p><p><p><a href=\"mailto:danny.mcnaught@dannymcnaught.com\">danny.mcnaught@dannymcnaught.com</a></p></p></td></tr><tr><td><strong>Code changed on Visual Studio Host Machine:</strong><p>DESKTOP-ACLFE3O</p></td></tr><tr><td><strong>Code Change Date and Time:</strong><p>Sunday, June 20, 2021 10:42 PM</p><strong>Code Changes:</strong><p>Created XML Comment</p></td></tr></tbody></table>\n"
  example: []
  syntax:
    content: public static bool IconsRefreshed { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: The icons refreshed.
    content.vb: Public Shared Property IconsRefreshed As Boolean
  overload: StartDevDrive.Program.IconsRefreshed*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: StartDevDrive.Program.EDriveCounter
  commentId: P:StartDevDrive.Program.EDriveCounter
  id: EDriveCounter
  parent: StartDevDrive.Program
  langs:
  - csharp
  - vb
  name: EDriveCounter
  nameWithType: Program.EDriveCounter
  fullName: StartDevDrive.Program.EDriveCounter
  type: Property
  source:
    remote:
      path: StartDevDrive/Program.cs
      branch: master
      repo: https://github.com/SFC-Sarge/StartDevDrive.git
    id: EDriveCounter
    path: Program.cs
    startLine: 132
  assemblies:
  - StartDevDrive
  namespace: StartDevDrive
  summary: Gets or sets the e drive counter.
  remarks: "\n<p><strong>History:</strong></p>\n<table><tbody><tr><td><strong>Code Changed by:</strong><p>Danny C. McNaught</p><p><p><a href=\"mailto:danny.mcnaught@dannymcnaught.com\">danny.mcnaught@dannymcnaught.com</a></p></p></td></tr><tr><td><strong>Code changed on Visual Studio Host Machine:</strong><p>DESKTOP-ACLFE3O</p></td></tr><tr><td><strong>Code Change Date and Time:</strong><p>Sunday, June 20, 2021 10:42 PM</p><strong>Code Changes:</strong><p>Created XML Comment</p></td></tr></tbody></table>\n"
  example: []
  syntax:
    content: public static int EDriveCounter { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The e drive counter.
    content.vb: Public Shared Property EDriveCounter As Integer
  overload: StartDevDrive.Program.EDriveCounter*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: StartDevDrive.Program.AppLocation
  commentId: P:StartDevDrive.Program.AppLocation
  id: AppLocation
  parent: StartDevDrive.Program
  langs:
  - csharp
  - vb
  name: AppLocation
  nameWithType: Program.AppLocation
  fullName: StartDevDrive.Program.AppLocation
  type: Property
  source:
    remote:
      path: StartDevDrive/Program.cs
      branch: master
      repo: https://github.com/SFC-Sarge/StartDevDrive.git
    id: AppLocation
    path: Program.cs
    startLine: 149
  assemblies:
  - StartDevDrive
  namespace: StartDevDrive
  summary: Gets or sets the application location.
  remarks: "\n<p><strong>History:</strong></p>\n<table><tbody><tr><td><strong>Code Changed by:</strong><p>Danny C. McNaught</p><p><p><a href=\"mailto:danny.mcnaught@dannymcnaught.com\">danny.mcnaught@dannymcnaught.com</a></p></p></td></tr><tr><td><strong>Code changed on Visual Studio Host Machine:</strong><p>DESKTOP-ACLFE3O</p></td></tr><tr><td><strong>Code Change Date and Time:</strong><p>Sunday, June 20, 2021 10:42 PM</p><strong>Code Changes:</strong><p>Created XML Comment</p></td></tr></tbody></table>\n"
  example: []
  syntax:
    content: public static string AppLocation { get; set; }
    parameters: []
    return:
      type: System.String
      description: The application location.
    content.vb: Public Shared Property AppLocation As String
  overload: StartDevDrive.Program.AppLocation*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: StartDevDrive.Program.RefreshIconCache
  commentId: M:StartDevDrive.Program.RefreshIconCache
  id: RefreshIconCache
  parent: StartDevDrive.Program
  langs:
  - csharp
  - vb
  name: RefreshIconCache()
  nameWithType: Program.RefreshIconCache()
  fullName: StartDevDrive.Program.RefreshIconCache()
  type: Method
  source:
    remote:
      path: StartDevDrive/Program.cs
      branch: master
      repo: https://github.com/SFC-Sarge/StartDevDrive.git
    id: RefreshIconCache
    path: Program.cs
    startLine: 327
  assemblies:
  - StartDevDrive
  namespace: StartDevDrive
  summary: Refreshes the icon cache.
  remarks: >-
    <p>

    <strong>History:</strong>

    </p>

    <table><thead><tr><th>Description</th></tr></thead><tbody><tr><td>Created XML Comment</td></tr></tbody></table>
  example: []
  syntax:
    content: public static StringBuilder RefreshIconCache()
    return:
      type: System.Text.StringBuilder
      description: System.Text.StringBuilder.
    content.vb: Public Shared Function RefreshIconCache As StringBuilder
  overload: StartDevDrive.Program.RefreshIconCache*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: StartDevDrive.Program.RefreshIconCacheTasksAsync
  commentId: M:StartDevDrive.Program.RefreshIconCacheTasksAsync
  id: RefreshIconCacheTasksAsync
  parent: StartDevDrive.Program
  langs:
  - csharp
  - vb
  name: RefreshIconCacheTasksAsync()
  nameWithType: Program.RefreshIconCacheTasksAsync()
  fullName: StartDevDrive.Program.RefreshIconCacheTasksAsync()
  type: Method
  source:
    remote:
      path: StartDevDrive/Program.cs
      branch: master
      repo: https://github.com/SFC-Sarge/StartDevDrive.git
    id: RefreshIconCacheTasksAsync
    path: Program.cs
    startLine: 409
  assemblies:
  - StartDevDrive
  namespace: StartDevDrive
  summary: Refreshes the icon cache tasks asynchronous.
  remarks: >-
    <p>

    <strong>History:</strong>

    </p>

    <table><thead><tr><th>Developer\Date\Time</th><th>Developer Company</th><th>Developer Phone</th><th>Developer Email</th><th>Developer On</th><th>Description</th></tr></thead><tbody><tr><td>

    Developer: Danny C. McNaught

    <p>Date: Tuesday, May 26, 2020</p><p>Time: 21:39 PM</p></td><td>Computer Question</td><td>1-919-239-3306</td><td>

    <a href="mailto:sfcsarge@outlook.com">mailto:sfcsarge@outlook.com</a>

    </td><td>SURFACE-PRO-LTE</td><td>Created XML Comment</td></tr></tbody></table>
  example: []
  syntax:
    content: public static async Task RefreshIconCacheTasksAsync()
    return:
      type: System.Threading.Tasks.Task
      description: System.Threading.Tasks.Task.
    content.vb: Public Shared Function RefreshIconCacheTasksAsync As Task
  overload: StartDevDrive.Program.RefreshIconCacheTasksAsync*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: StartDevDrive.Program.MountDriveTasksAsync
  commentId: M:StartDevDrive.Program.MountDriveTasksAsync
  id: MountDriveTasksAsync
  parent: StartDevDrive.Program
  langs:
  - csharp
  - vb
  name: MountDriveTasksAsync()
  nameWithType: Program.MountDriveTasksAsync()
  fullName: StartDevDrive.Program.MountDriveTasksAsync()
  type: Method
  source:
    remote:
      path: StartDevDrive/Program.cs
      branch: master
      repo: https://github.com/SFC-Sarge/StartDevDrive.git
    id: MountDriveTasksAsync
    path: Program.cs
    startLine: 475
  assemblies:
  - StartDevDrive
  namespace: StartDevDrive
  summary: Mounts the drive tasks asynchronous.
  remarks: >-
    <p>

    <strong>History:</strong>

    </p>

    <table><thead><tr><th>Description</th></tr></thead><tbody><tr><td>Created XML Comment</td></tr></tbody></table>
  example: []
  syntax:
    content: public static async Task MountDriveTasksAsync()
    return:
      type: System.Threading.Tasks.Task
      description: System.Threading.Tasks.Task.
    content.vb: Public Shared Function MountDriveTasksAsync As Task
  overload: StartDevDrive.Program.MountDriveTasksAsync*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: StartDevDrive.Program.MountDrive(System.Boolean)
  commentId: M:StartDevDrive.Program.MountDrive(System.Boolean)
  id: MountDrive(System.Boolean)
  parent: StartDevDrive.Program
  langs:
  - csharp
  - vb
  name: MountDrive(Boolean)
  nameWithType: Program.MountDrive(Boolean)
  fullName: StartDevDrive.Program.MountDrive(System.Boolean)
  type: Method
  source:
    remote:
      path: StartDevDrive/Program.cs
      branch: master
      repo: https://github.com/SFC-Sarge/StartDevDrive.git
    id: MountDrive
    path: Program.cs
    startLine: 539
  assemblies:
  - StartDevDrive
  namespace: StartDevDrive
  summary: Mounts the drive.
  remarks: >-
    <p>

    <strong>History:</strong>

    </p>

    <table><thead><tr><th>Description</th></tr></thead><tbody><tr><td>Created XML Comment</td></tr></tbody></table>
  example: []
  syntax:
    content: public static StringBuilder MountDrive(bool defaultValue = false)
    parameters:
    - id: defaultValue
      type: System.Boolean
      description: if set to <code>true</code> [default value].
    return:
      type: System.Text.StringBuilder
      description: StringBuilder.
    content.vb: Public Shared Function MountDrive(defaultValue As Boolean = False) As StringBuilder
  overload: StartDevDrive.Program.MountDrive*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: StartDevDrive.Program.CreateDevelopmentTxtFileAsync(System.String,System.String,System.String,System.String)
  commentId: M:StartDevDrive.Program.CreateDevelopmentTxtFileAsync(System.String,System.String,System.String,System.String)
  id: CreateDevelopmentTxtFileAsync(System.String,System.String,System.String,System.String)
  parent: StartDevDrive.Program
  langs:
  - csharp
  - vb
  name: CreateDevelopmentTxtFileAsync(String, String, String, String)
  nameWithType: Program.CreateDevelopmentTxtFileAsync(String, String, String, String)
  fullName: StartDevDrive.Program.CreateDevelopmentTxtFileAsync(System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: StartDevDrive/Program.cs
      branch: master
      repo: https://github.com/SFC-Sarge/StartDevDrive.git
    id: CreateDevelopmentTxtFileAsync
    path: Program.cs
    startLine: 597
  assemblies:
  - StartDevDrive
  namespace: StartDevDrive
  summary: Creates the development text file asynchronous.
  remarks: "\n<p><strong>History:</strong></p>\n<table><tbody><tr><td><strong>Code Changed by:</strong><p>Danny C. McNaught</p><p><p><a href=\"mailto:danny.mcnaught@dannymcnaught.com\">danny.mcnaught@dannymcnaught.com</a></p></p></td></tr><tr><td><strong>Code changed on Visual Studio Host Machine:</strong><p>DESKTOP-ACLFE3O</p></td></tr><tr><td><strong>Code Change Date and Time:</strong><p>Sunday, June 20, 2021 10:42 PM</p><strong>Code Changes:</strong><p>Created XML Comment</p></td></tr></tbody></table>\n"
  example: []
  syntax:
    content: public static async Task CreateDevelopmentTxtFileAsync(string vhdxDriveLocation, string vhdxFileName, string fileFullName, string vhdxDriveLetter)
    parameters:
    - id: vhdxDriveLocation
      type: System.String
      description: The VHDX drive location.
    - id: vhdxFileName
      type: System.String
      description: Name of the VHDX file.
    - id: fileFullName
      type: System.String
      description: Full name of the file.
    - id: vhdxDriveLetter
      type: System.String
      description: The VHDX drive letter.
    return:
      type: System.Threading.Tasks.Task
      description: System.Threading.Tasks.Task.
    content.vb: Public Shared Function CreateDevelopmentTxtFileAsync(vhdxDriveLocation As String, vhdxFileName As String, fileFullName As String, vhdxDriveLetter As String) As Task
  overload: StartDevDrive.Program.CreateDevelopmentTxtFileAsync*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
references:
- uid: StartDevDrive
  commentId: N:StartDevDrive
  name: StartDevDrive
  nameWithType: StartDevDrive
  fullName: StartDevDrive
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: StartDevDrive.Program.Factory*
  commentId: Overload:StartDevDrive.Program.Factory
  name: Factory
  nameWithType: Program.Factory
  fullName: StartDevDrive.Program.Factory
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: StartDevDrive.Program.Logger*
  commentId: Overload:StartDevDrive.Program.Logger
  name: Logger
  nameWithType: Program.Logger
  fullName: StartDevDrive.Program.Logger
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: StartDevDrive.Program.DDriveCounter*
  commentId: Overload:StartDevDrive.Program.DDriveCounter
  name: DDriveCounter
  nameWithType: Program.DDriveCounter
  fullName: StartDevDrive.Program.DDriveCounter
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: StartDevDrive.Program.IconsRefreshed*
  commentId: Overload:StartDevDrive.Program.IconsRefreshed
  name: IconsRefreshed
  nameWithType: Program.IconsRefreshed
  fullName: StartDevDrive.Program.IconsRefreshed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: StartDevDrive.Program.EDriveCounter*
  commentId: Overload:StartDevDrive.Program.EDriveCounter
  name: EDriveCounter
  nameWithType: Program.EDriveCounter
  fullName: StartDevDrive.Program.EDriveCounter
- uid: StartDevDrive.Program.AppLocation*
  commentId: Overload:StartDevDrive.Program.AppLocation
  name: AppLocation
  nameWithType: Program.AppLocation
  fullName: StartDevDrive.Program.AppLocation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: StartDevDrive.Program.RefreshIconCache*
  commentId: Overload:StartDevDrive.Program.RefreshIconCache
  name: RefreshIconCache
  nameWithType: Program.RefreshIconCache
  fullName: StartDevDrive.Program.RefreshIconCache
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: StartDevDrive.Program.RefreshIconCacheTasksAsync*
  commentId: Overload:StartDevDrive.Program.RefreshIconCacheTasksAsync
  name: RefreshIconCacheTasksAsync
  nameWithType: Program.RefreshIconCacheTasksAsync
  fullName: StartDevDrive.Program.RefreshIconCacheTasksAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: StartDevDrive.Program.MountDriveTasksAsync*
  commentId: Overload:StartDevDrive.Program.MountDriveTasksAsync
  name: MountDriveTasksAsync
  nameWithType: Program.MountDriveTasksAsync
  fullName: StartDevDrive.Program.MountDriveTasksAsync
- uid: StartDevDrive.Program.MountDrive*
  commentId: Overload:StartDevDrive.Program.MountDrive
  name: MountDrive
  nameWithType: Program.MountDrive
  fullName: StartDevDrive.Program.MountDrive
- uid: StartDevDrive.Program.CreateDevelopmentTxtFileAsync*
  commentId: Overload:StartDevDrive.Program.CreateDevelopmentTxtFileAsync
  name: CreateDevelopmentTxtFileAsync
  nameWithType: Program.CreateDevelopmentTxtFileAsync
  fullName: StartDevDrive.Program.CreateDevelopmentTxtFileAsync
